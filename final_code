### 구글 드라이브 마운트



from google.colab import drive

# 구글 드라이브 마운트
drive.mount('/content/drive')

### openAI 라이브러리 설치

pip install openai==0.28

### API key 설정

import os
os.environ["OPENAI_API_KEY"]=""

### 사용자 데이터 파일

import pandas as pd

# 사용자 데이터 파일 로드
file_path = '/content/drive/MyDrive/start - fantasy/사용자 데이터.xlsx'  # 파일 경로
data = pd.read_excel(file_path)

# 데이터 미리 보기
print(data)

data[data['ID'] == 1]

### 식단 생성 및 수정

import openai

# 식단 생성 및 수정
def query_gpt_with_excel(user_question, excel_data, user_id):
    # 사용자 ID로 데이터 필터링
    filtered_data = excel_data[excel_data['ID'] == user_id]
    # 필터링 결과 확인
    if filtered_data.empty:
        return f"ID {user_id}에 해당하는 데이터가 없습니다."

    # 엑셀 데이터를 문자열로 변환
    excel_content = filtered_data.to_csv(index=False)

    # OpenAI에 보낼 프롬프트 생성
    prompt = f"""
    아래는 ID {user_id}에 해당하는 정보야:
    {excel_content}

    이 데이터를 이용해서 질문에 대답해줘:
    {user_question}
    """

    # OpenAI API 호출
    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "이 사람의 정보를 분석해서 맞춤형 식단을 짜줘. 재료와 자세한 레시피를 알려주고 모든 재료별로 실제 상품까지 추천해줘. 상품 링크는 적지 말고 구체적인 상품명과 브랜드를 적어줘. 결과 제공 순서는 메뉴명, 재료, 레시피, 상품 추천 순으로 해줘"},
            {"role": "user", "content": prompt}
        ]
    )

    return response['choices'][0]['message']['content']

# 식단 기반 수정 함수
def modify_diet_based_on_feedback(initial_diet, user_feedback):
    # 사용자 피드백과 초기 식단을 기반으로 OpenAI API 호출
    prompt = f"""
    아래는 현재 생성된 식단이야:
    {initial_diet}

    사용자 피드백:
    {user_feedback}

    피드백을 반영해서 식단을 수정해줘.
    """

    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "사용자가 제공한 피드백을 기반으로 기존 식단을 수정해줘. 메뉴 자체를 바꾸지 말고 정확하게 사용자가 피드백한 부분만 수정해줘."},
            {"role": "user", "content": prompt}
        ]
    )
    return response['choices'][0]['message']['content']

# ID가 1인 사용자의 초기 식단 생성
user_question = "나의 정보를 고려해서 식단을 짜줘."
initial_diet = query_gpt_with_excel(user_question, data, 1)
print("생성된 식단 및 재료와 레시피: ", initial_diet)

# 수정 루프
print("수정을 원하는 부분이 있으면 알려주세요!")
while True:
    user_feedback = input("피드백('exit'을 입력하면 종료됩니다): ")

    if user_feedback.lower() == "exit":
        print("이용해 주셔서 감사합니다!")
        break

    try:
        # 기존 식단을 기반으로 수정
        initial_diet = modify_diet_based_on_feedback(initial_diet, user_feedback)
        print("수정된 식단: ", initial_diet)
    except Exception as e:
        print("An error occurred:", e)

# ID가 2인 사용자의 초기 식단 생성
user_question = "나의 정보를 고려해서 식단을 짜줘."
initial_diet = query_gpt_with_excel(user_question, data, 2)
print("생성된 식단 및 재료와 레시피: ", initial_diet)

# 수정 루프
print("수정을 원하는 부분이 있으면 알려주세요!")
while True:
    user_feedback = input("피드백('exit'을 입력하면 종료됩니다): ")

    if user_feedback.lower() == "exit":
        print("이용해 주셔서 감사합니다!")
        break

    try:
        # 기존 식단을 기반으로 수정
        initial_diet = modify_diet_based_on_feedback(initial_diet, user_feedback)
        print("수정된 식단: ", initial_diet)
    except Exception as e:
        print("An error occurred:", e)
